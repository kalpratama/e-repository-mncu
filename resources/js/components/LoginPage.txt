<template>
  <div class="page-container">
    <div class="content-wrapper">
      <div class="logo-area">
        <img :src="logo" alt="MNCU Logo" class="logo-image">
      </div>
      <div class="login-box">
        <h1 class="app-name">E-Repository</h1>
        <p class="company-name">Universitas Media Nusantara Citra</p>
        <form @submit.prevent="handleLogin">
          <div class="input-group">
            <label for="username">Username</label>
            <input type="text" id="username" v-model="form.username" required autocomplete="username" placeholder="Masukkan username">
            <!-- **** POINT OF CHANGE: Display validation error **** -->
            <p v-if="errors.username" class="validation-error">{{ errors.username }}</p>
          </div>
          <div class="input-group">
            <label for="password">Password</label>
            <input type="password" id="password" v-model="form.password" required autocomplete="current-password" placeholder="Masukkan password">
            <!-- **** POINT OF CHANGE: Display validation error **** -->
            <p v-if="errors.password" class="validation-error">{{ errors.password }}</p>
          </div>
          <!-- **** POINT OF CHANGE: Display general server error message **** -->
          <p v-if="errorMessage" class="error-message">{{ errorMessage }}</p>
          <button type="submit" :disabled="isLoading">
            {{ isLoading ? 'Loading...' : 'Masuk' }}
          </button>
        </form>
      </div>
    </div>
  </div>
</template>

<script>
import axios from 'axios';
import logo from '../assets/mncu_logo.png';

export default {
  data() {
    return {
      logo: logo,
      form: {
        username: '',
        password: ''
      },
      // **** POINT OF CHANGE: Simplified error handling state ****
      errorMessage: '',
      errors: {},
      isLoading: false,
    };
  },
  methods: {
    async handleLogin() {
      // Clear previous errors
      this.errorMessage = '';
      this.errors = {};
      this.isLoading = true;

      try {
        const response = await axios.post('/api/login', this.form);
        // If successful, emit the event to the parent component
        this.$emit('login-success', response.data);
      } catch (error) {
        if (error.response) {
          // The request was made and the server responded with a status code
          // that falls out of the range of 2xx
          if (error.response.status === 422) {
            // This is a validation error from Laravel
            this.errors = error.response.data.errors;
            this.errorMessage = 'Please check the input fields.';
          } else if (error.response.status === 401) {
            // This is our "Invalid Credentials" error
            this.errorMessage = 'Username atau password tidak sesuai!';
          } else {
            // A generic server error
            this.errorMessage = 'An unexpected error occurred on the server.';
          }
        } else {
          // Something happened in setting up the request that triggered an Error
          this.errorMessage = 'Could not connect to the server. Please check your network.';
        }
        console.error('Login failed:', error);
      } finally {
        this.isLoading = false;
      }
    }
  }
};
</script>

<style scoped>
.page-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #f0f2f5;
  font-family: 'Figtree', sans-serif;
  padding: 1rem;
  box-sizing: border-box;
}

.content-wrapper {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  background: white;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  width: 80%;
  max-width: 1000px;
}

.logo-area {
  flex-basis: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-top: 2rem;
}

.logo-image {
  width: 50%;
  height: 50%;
  object-fit: contain;
}

.app-name {
  text-align: center;
  font-size: 1.5rem;
  font-weight: bold;
  color: #1c1c1c;
  margin: 0;
}

.company-name {
  text-align: center;
  font-size: 1rem;
  color: #666;
  margin-top: 0.5rem;
  margin-bottom: 2rem;
}

.login-box {
  flex-basis: 90%;
  padding: 2rem;
  width: 90%;
  max-width: 400px;
}

.login-box h2 {
  text-align: center;
  margin-top: 0;
  margin-bottom: 2rem;
  color: #333;
  font-weight: bold;
}

.input-group {
  margin-bottom: 1.5rem;
}

.input-group label {
  display: block;
  margin-bottom: 0.5rem;
  color: #555;
  font-weight: 500;
}

.input-group input {
  width: 100%;
  padding: 0.8rem;
  border: 1px solid #ccc;
  border-radius: 8px;
  box-sizing: border-box;
  transition: border-color 0.2s;
}

.input-group input:focus {
  outline: none;
  border-color: #1F3D7B;
}

button {
  width: 100%;
  padding: 0.9rem;
  background-color: #1F3D7B;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: background-color 0.2s;
}

button:hover {
  background-color: #0056b3;
}

.error-message {
  color: #d93025;
  text-align: center;
  margin-bottom: 1rem;
  font-size: 0.9rem;
}

@media (max-width: 800px) {
  .content-wrapper {
    flex-direction: column;
    gap: 2rem;
    padding: 1rem;
  }

  .logo-area, .login-box {
    flex-basis: 100%;
    max-width: 420px;
  }

  .logo-area {
    padding-bottom: 0;
  }
}
</style>
